@using book_a_reading_room_visit.model
@using book_a_reading_room_visit.web.Helper
@using book_a_reading_room_visit.web.Models
@model BookingViewModel

@{
    ViewData["Title"] = "Secure booking";
}

<h1 class="display-4">2. Enter your details</h1>

<div class="container content-wrapper">

    <div class="text-center">
        <section class="row" id="progress-bar">
            <h2 class="sr-only">Progress</h2>
            <div class="col-md-12">
                <ol>
                    <li><span class="step-number">1</span> <span class="step">Select a date</span></li>
                    <li aria-current="page" class="active"><span class="step-number">2</span> <span class="step">Enter your details</span></li>
                    <li><span class="step-number">3</span> <span class="step">Reservation confirmation</span></li>
                    <li><span class="step-number">4</span> <span class="step">Order documents</span></li>
                    <li><span class="step-number">5</span> <span class="step">Order complete</span></li>
                </ol>
            </div>
        </section>
    </div>

    <div class="heading">
        <div class="row">
            <div class="col-md-12">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="summary-error-message">
                        <h2>Sorry there was a problem.</h2>
                        <p>Check the highlighted fields to continue.</p>
                    </div>
                }
                <h2>You are about to provisionally book this visit</h2>
                <p>Your booking will be confirmed when you submit a document order.</p>
            </div>
        </div>
    </div>

    <div class="booking-details">
        <div class="row">
            <div class="col-md-12">
                <table class="table">
                    <tbody>
                        <tr>
                            <th scope="row">Visit date</th>
                            <td>@($"{Model.BookingStartDate:dddd dd MMMM yyyy}")</td>
                        </tr>
                        <tr>
                            <th scope="row">Visit type</th>
                            <td>@(Model.BookingType == BookingTypes.StandardOrderVisit ? "Standard visit" : "Bulk order visit")</td>
                        </tr>
                        @if (Model.BookingType == BookingTypes.StandardOrderVisit)
                        {
                            <tr>
                                <th scope="row">Reading room</th>
                                @if (Model.SeatType == SeatTypes.StdRRSeat)
                                {
                                    <td>Document reading room (All seats have camera stands)</td>
                                }
                                else
                                {
                                    <td>Map and large document reading room</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <p class="no-margin">
        Once you choose a date and make a provisional booking, you will not be able to change your visit date unless you cancel your existing booking.
    </p>

    <form class="margin-bottom" action="@Url.Action("CancelProvision", "Booking", new { bookingType = @Model.BookingType.ToStringURL() })" method="post">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(Model => Model.BookingReference)
        @Html.Hidden("seattype", Model.SeatType.ToStringURL())
        <button type="submit" class="btn-link">Cancel and choose a different date</button>
    </form>

    <div class="text-center">
        <div class="row">
            <div class="col-md-12">
                <div id="enter-your-details-timer" class="full-width warning-panel">
                    <h3>@(ViewData.ModelState.IsValid ? "You have 20 minutes to enter your details." : "Enter your details")</h3>
                    <span id="timer">Complete this page by @($"{Model.ExpiredBy:hh:mm tt}") British Summer Time (BST).</span>
                    <small>If you do not complete the form by this time we will cancel your seat and you will need to start the process again.</small>
                    @Html.HiddenFor(Model => Model.CurrentTime)
                </div>
            </div>
        </div>
    </div>

    <form action="@Url.Action("BookingConfirmation", "Booking", new { bookingType = @Model.BookingType.ToStringURL() })" method="post">
        <div class="reader-ticket-form">
            <div class="row">
                <div class="col-md-12">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(Model => Model.BookingReference)
                    @Html.Hidden("seattype", Model.SeatType.ToStringURL())
                    @Html.HiddenFor(Model => Model.BookingStartDate)
                    <fieldset>
                        <legend class="sr-only">Enter your reader’s ticket number</legend>

                        <div class="form-row">
                            <label for="ticket" class="mt-lg">Enter your reader’s ticket number</label>
                            <p class="helper-text">
                                You can find this below the barcode on the back of your reader’s ticket card. If you don't have a reader's ticket card, you can use your temporary ticket number, which starts with ’T’.
                            </p>

                            @Html.TextBoxFor(Model => Model.Ticket, new { required = true })

                            @if (ViewData.ModelState["Ticket"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.Ticket, "", new { @class = "form-error" })
                            }

                            <p class="helper-text mt-med">Don’t have a valid reader’s ticket or temporary reader’s ticket number?<br><a target="_blank" rel="noreferrer noopener" href="@Environment.GetEnvironmentVariable("ReaderRegisterURL")">Register for or renew a reader’s ticket</a></p>
                        </div>

                    </fieldset>

                    <fieldset>
                        <legend class="mt-lg">Enter your first name and last name</legend>

                        <div class="form-row">
                            <p class="helper-text">This should be the same as the name on your reader’s ticket card.</p>

                            <label for="firstname" class="sr-only">First name</label>
                            @Html.TextBoxFor(Model => Model.FirstName, new { placeholder = "Enter first name", required = true })

                            @if (ViewData.ModelState["FirstName"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.FirstName, "", new { @class = "form-error" })
                            }

                            <label for="lastname" class="sr-only">Last name</label>
                            @Html.TextBoxFor(Model => Model.LastName, new { placeholder = "Enter last name", required = true })

                            @if (ViewData.ModelState["LastName"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.LastName, "", new { @class = "form-error" })
                            }
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Enter your email address or telephone number so we can contact you.</legend>

                        <div class="form-row">
                            <label for="email" class="mt-lg">Email address</label>
                            <p class="helper-text">
                                We will use this to send you a booking confirmation email with a link to your document order form and a reminder email before your visit.
                            </p>

                            @Html.TextBoxFor(Model => Model.Email)

                            @if (ViewData.ModelState["Email"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.Email, "", new { @class = "form-error" })
                            }

                            @if (ViewData.ModelState["email-phone"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessage("email-phone", "", new { @class = "form-error" })
                            }
                        </div>

                        <div class="form-row">
                            <label for="phone" class="mt-lg">Telephone number</label>
                            <p class="helper-text">
                                If you provide a telephone number only, you will need to note down the booking reference we are about to give you on the next page.
                            </p>

                            @Html.TextBoxFor(Model => Model.Phone, new { id = "phone" })

                            @if (ViewData.ModelState["Phone"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.Phone, "", new { @class = "form-error" })
                            }

                            @if (ViewData.ModelState["email-phone"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessage("email-phone", "", new { @class = "form-error" })
                            }
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend class="sr-only">Please complete the following checkboxes</legend>

                        <div class="form-row checkbox">
                            @Html.CheckBoxFor(Model => Model.AcceptTsAndCs, new { id = "terms-conditions", required = true })
                            <label for="terms-conditions">Accept our <a target="_blank" rel="noopener noreferrer" href="http://www.nationalarchives.gov.uk/legal/">terms of use</a> and <a target="_blank" rel="noopener noreferrer" href="https://www.nationalarchives.gov.uk/legal/privacy-policy/">privacy policy</a></label>

                            @if (ViewData.ModelState["AcceptTsAndCs"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.AcceptTsAndCs, "", new { @class = "form-error" })
                            }
                        </div>

                        <div class="form-row checkbox">
                            @Html.CheckBoxFor(Model => Model.AcceptCovidCharter, new { id = "covid-charter", required = true })
                            <label for="covid-charter">Accept our <a target="_blank" rel="noopener noreferrer" href="https://www.nationalarchives.gov.uk/documents/coronavirus-visitor-charter.pdf">COVID-19 Visitor Charter</a> (PDF; opens in a new window)</label>

                            @if (ViewData.ModelState["AcceptCovidCharter"]?.Errors.Count() > 0)
                            {
                                @Html.ValidationMessageFor(Model => Model.AcceptCovidCharter, "", new { @class = "form-error" })
                            }
                        </div>

                        <div class="form-row checkbox">
                            @Html.CheckBoxFor(Model => Model.NoFaceCovering, new { id = "face-covering" })
                            <label for="face-covering">
                                I have a legitimate reason to <a target="_blank" rel="noopener noreferrer" href="https://www.gov.uk/government/publications/face-coverings-when-to-wear-one-and-how-to-make-your-own/face-coverings-when-to-wear-one-and-how-to-make-your-own#exemptions">not wear a face covering</a>.
                                This information won’t be shared with the NHS Test and Trace service.
                            </label>
                        </div>
                    </fieldset>

                    <div class="form-row">
                        <button type="submit" class="button" name="submitbutton" value="reserve">Complete provisional booking</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
