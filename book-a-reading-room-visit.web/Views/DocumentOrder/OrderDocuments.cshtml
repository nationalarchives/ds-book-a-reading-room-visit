@using book_a_reading_room_visit.web.Helper
@using book_a_reading_room_visit.web.Models
@using book_a_reading_room_visit.model

@{
    ViewData["Title"] = $"Order documents - {(Model.BookingType == BookingTypes.StandardOrderVisit ? "standard booking" : "bulk order booking")} - The National Archives";
}

@model DocumentOrderViewModel

@await Html.PartialAsync("Partials/_Breadcrumbs")

<h1 class="display-4">4. Order documents for your visit</h1>

<div class="container content-wrapper">

    <section class="row" id="progress-bar">
        <h2 class="sr-only">Progress</h2>
        <div class="col-md-12">
            <ol>
                <li><span class="step-number">1</span> <span class="step">Select a date</span></li>
                <li><span class="step-number">2</span> <span class="step">Enter your details</span></li>
                <li><span class="step-number">3</span> <span class="step">Your visit details</span></li>
                <li aria-current="page" class="active"><span class="step-number">4</span> <span class="step">Order documents</span></li>
                <li><span class="step-number">5</span> <span class="step">Order summary</span></li>
            </ol>
        </div>
    </section>

    <div class="heading align-left">
        <div class="row">
            <div class="col-md-12">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="summary-error-message">
                        <h2>There is a problem.</h2>
                        <p>Check the highlighted responses below.</p>
                    </div>
                }
                <h2>Tell us which documents you would like to see</h2>
                <p>
                    You have a provisional booking to visit the reading rooms. Complete this form to order original documents held by The National
                    Archives.
                </p>
                <p>
                    If you do not complete this step by <span class="bold-text">@($"{Model.CompleteByDate:dddd dd MMMM yyyy}") at 11:59pm, local UK time</span>
                    your visit will be automatically cancelled. Once this date has passed, you cannot change your document order as we will begin
                    preparing your order for your visit.
                </p>
                <p>
                    Return to edit or view your document order using this link:<br>
                    <a target="_blank" rel="noreferrer noopener" href="/book-a-reading-room-visit/return-to-booking">https://www.nationalarchives.gov.uk/book-a-reading-room-visit/return-to-booking</a>
                </p>
                <p>
                    This link will be included in your provisional booking email if you provided an email address. If you cannot see this email in
                    your inbox, check your spam and junk email folders.
                </p>
            </div>
        </div>
    </div>

    <div class="booking-details">
        <div class="row">
            <div class="col-md-12">
                <h3>Your booking details</h3>
                <table class="table">
                    <tbody>
                        <tr>
                            <th scope="row">Booking reference</th>
                            <td>
                                @Model.BookingReference <span class="secondary-info">A copy of this has been emailed to you. If you didn't provide your email address as part of the booking process, you need to safely note your booking reference.</span>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">Reader's ticket number</th>
                            <td>@(Model.ReaderTicket < 0 ? $"T{Model.ReaderTicket*-1}" : $"{Model.ReaderTicket}")</td>
                        </tr>
                        <tr>
                            <th scope="row">Visit date</th>
                            <td>@($"{Model.BookingStartDate:dddd dd MMMM yyyy}")</td>
                        </tr>
                        <tr>
                            <th scope="row">Visit type</th>
                            <td>
                                @(Model.BookingType == BookingTypes.StandardOrderVisit ? "Standard visit" : "Bulk order visit")
                            </td>
                        </tr>
                        @if (Model.BookingType == BookingTypes.StandardOrderVisit)
                        {
                            <tr>
                                <th scope="row">Reading room</th>
                                @if (Model.SeatType == SeatTypes.StdRRSeat)
                                {
                                    <td>Document reading room</td>
                                }
                                else
                                {
                                    <td>Map and large document reading room</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                <form action="@Url.Action("CancelBooking", "Booking", new { bookingType = @Model.BookingType.ToStringURL() })" method="post">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(Model => Model.BookingReference)
                    @Html.Hidden("readerticket", Model.ReaderTicket)
                    @Html.Hidden("seattype", Model.SeatType.ToStringURL())
                    @Html.HiddenFor(Model => Model.BookingStartDate)
                    @Html.HiddenFor(Model => Model.SeatNumber)
                    <button type="submit" class="button secondary-button">Cancel your visit</button>
                </form>
            </div>
        </div>
    </div>

    <div class="prompt-grey full-width warning-panel">
        <p class="no-margin">
            You can add or remove documents from this order <span class="bold-text">until @($"{Model.CompleteByDate:dddd dd MMMM yyyy}") at 11:59pm, local UK time.</span>
        </p>
    </div>

    <div class="order-form">
        <div class="row">
            <div class="col-md-12">
                <form action="@Url.Action("OrderDocuments", "DocumentOrder", new { bookingType = @Model.BookingType.ToStringURL(), readerTicket = Model.ReaderTicket, bookingReference = Model.BookingReference } )" method="POST" novalidate>
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(Model => Model.BookingStartDate)
                    @Html.HiddenFor(Model => Model.CompleteByDate)
                    @Html.HiddenFor(Model => Model.CompleteByDate)
                    @Html.Hidden("seattype", Model.SeatType.ToStringURL())
                    @Html.HiddenFor(Model => Model.SeatNumber)

                    @if (Model.BookingType == BookingTypes.StandardOrderVisit)
                    {
                        @await Html.PartialAsync("Partials/_StandardOrderForm", Model)
                    }
                    else
                    {
                        @await Html.PartialAsync("Partials/_BulkOrderForm", Model)
                    }

                    <fieldset>
                        <legend>
                            <label for="additional-reqs">Access needs and research requests</label>
                        </legend>

                        <p class="helper-text">
                            Tell us about your access needs, including if you have mobility access requirements. You can also use
                            this space to tell us your research requests, including library materials, microfilm/microfiche, or finding/preservation
                            aids that are normally available on self-service.
                        </p>

                        <p class="helper-text">We cannot guarantee that all of the research materials you request will be available.</p>

                        @if (ViewData.ModelState["AdditionalRequirements"]?.Errors.Count() > 0)
                        {
                            @Html.TextAreaFor(Model => Model.AdditionalRequirements, new { id = "additional-reqs", @class = "form-warning", aria_describedby = "validation-message-additional-requirements" })
                            @Html.ValidationMessageFor(Model => Model.AdditionalRequirements, "", new { @class = "form-error", id = "validation-message-additional-requirements" })
                        }
                        else
                        {
                            @Html.TextAreaFor(Model => Model.AdditionalRequirements, new { id = "additional-reqs" })
                        }
                    </fieldset>
                    <button class="button" type="submit">Save and review</button>
                </form>
            </div>
        </div>
    </div>
</div>